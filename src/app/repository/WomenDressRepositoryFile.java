package app.repository;
import app.domain.WomenDress;
import org.springframework.stereotype.Repository;

import java.io.*;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

@Repository
public class WomenDressRepositoryFile implements WomenDressRepository {


        private static final String FILE_NAME = "dresses.dat";
        private Map<Long, WomenDress> database = new HashMap<>();

        public WomenDressRepositoryFile() {
            // –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞
            loadFromFile();
            // –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äì –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            if (database.isEmpty()) {
                initData();
                saveToFile();
            }
        }

        @Override
        public WomenDress getById(Long id) {
            return database.get(id);
        }

        // üîπ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
        public void save(WomenDress dress) {
            database.put(dress.getId(), dress);
            saveToFile();
        }



        // üîπ —Å–æ—Ö—Ä–∞–Ω—è–µ–º Map –≤ —Ñ–∞–π–ª
        private void saveToFile() {
            try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(FILE_NAME))) {
                oos.writeObject(database);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        // üîπ —á–∏—Ç–∞–µ–º Map –∏–∑ —Ñ–∞–π–ª–∞
        @SuppressWarnings("unchecked")
        private void loadFromFile() {
            File file = new File(FILE_NAME);
            if (!file.exists()) return;

            try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(FILE_NAME))) {
                database = (Map<Long, WomenDress>) ois.readObject();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
        }

        // üîπ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        private void initData() {
            database.put(1L, new WomenDress(1L,"–í–µ—á–µ—Ä–Ω–µ–µ –ø–ª–∞—Ç—å–µ", "Dolce & Gabbana", new BigDecimal(800)));
            database.put(2L, new WomenDress(2L,"–ö–æ–∫—Ç–µ–π–ª—å–Ω–æ–µ –ø–ª–∞—Ç—å–µ", "Dolce & Gabbana", new BigDecimal(900)));
            database.put(3L, new WomenDress(3L,"–°–≤–∞–¥–µ–±–Ω–æ–µ –ø–ª–∞—Ç—å–µ", "Dolce & Gabbana", new BigDecimal(15000)));
        }

        // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
        WomenDress newDress = new WomenDress(4L, "–õ–µ—Ç–Ω–µ–µ –ø–ª–∞—Ç—å–µ", "Gucci", new BigDecimal(1200));






}


